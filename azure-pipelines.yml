trigger:
  branches:
    include:
      - main
variables:
  tfWorkingDir: 'C:\\terraform\\ResourceGroup'
  tfRg: 'your-backend-rg'
  tfStorage: 'yourbackendstorage'
  tfContainer: 'tfstate'
  tfKey: 'terraform.tfstate'
  azureServiceConnection: 'KamsSvcConnec'  # ðŸ‘ˆ your service connection name
pool:
  name: 'Default'
stages:
  - stage: Terraform
    displayName: Deploy Terraform
    jobs:
      - job: RunTerraform
        displayName: Terraform Init, Plan, Apply
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '$(azureServiceConnection)'                 # âœ… Required for backend config
              environmentServiceNameAzureRM: '$(azureServiceConnection)'    # âœ… Required for auth
              workingDirectory: '$(tfWorkingDir)'
              backendAzureRmResourceGroupName: '$(tfRg)'
              backendAzureRmStorageAccountName: '$(tfStorage)'
              backendAzureRmContainerName: '$(tfContainer)'
              backendAzureRmKey: '$(tfKey)'
          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: '$(azureServiceConnection)'
              workingDirectory: '$(tfWorkingDir)'
          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: '$(azureServiceConnection)'
              workingDirectory: '$(tfWorkingDir)'
              commandOptions: '-auto-approve'
